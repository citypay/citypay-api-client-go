/*
CityPay Payment API

Testing DirectPostApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package citypay

import (
	"context"
	openapiclient "github.com/citypay/citypay-api-client-go"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_citypay_DirectPostApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test DirectPostApiService DirectCResAuthRequest", func(t *testing.T) {

		var uuid string

		resp, httpRes, err := apiClient.DirectPostApi.DirectCResAuthRequest(context.Background(), uuid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DirectPostApiService DirectCResTokeniseRequest", func(t *testing.T) {

		var uuid string

		resp, httpRes, err := apiClient.DirectPostApi.DirectCResTokeniseRequest(context.Background(), uuid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DirectPostApiService DirectPostAuthRequest", func(t *testing.T) {

		resp, httpRes, err := apiClient.DirectPostApi.DirectPostAuthRequest(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DirectPostApiService DirectPostTokeniseRequest", func(t *testing.T) {

		resp, httpRes, err := apiClient.DirectPostApi.DirectPostTokeniseRequest(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DirectPostApiService TokenRequest", func(t *testing.T) {

		resp, httpRes, err := apiClient.DirectPostApi.TokenRequest(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
