/*
CityPay Payment API

 Welcome to the CityPay API, a robust HTTP API payment solution designed for seamless server-to-server  transactional processing. Our API facilitates a wide array of payment operations, catering to diverse business needs.  Whether you're integrating Internet payments, handling Mail Order/Telephone Order (MOTO) transactions, managing  Subscriptions with Recurring and Continuous Authority payments, or navigating the complexities of 3-D Secure  authentication, our API is equipped to support your requirements. Additionally, we offer functionalities for  Authorisation, Refunding, Pre-Authorisation, Cancellation/Voids, and Completion processing, alongside the capability  for tokenised payments.  ## Compliance and Security Overview <aside class=\"notice\">   Ensuring the security of payment transactions and compliance with industry standards is paramount. Our API is    designed with stringent security measures and compliance protocols to safeguard sensitive information and meet    the rigorous requirements of Visa, MasterCard, and the PCI Security Standards Council. </aside>  ### Key Compliance and Security Measures  * **TLS Encryption**: All data transmissions must utilise TLS version 1.2 or higher, employing [strong cryptography](#enabled-tls-ciphers). Our infrastructure strictly enforces this requirement to maintain the integrity and confidentiality of data in transit. We conduct regular scans and assessments of our TLS endpoints to identify and mitigate vulnerabilities. * **Data Storage Prohibitions**: Storing sensitive cardholder data (CHD), such as the card security code (CSC) or primary account number (PAN), is strictly prohibited. Our API is designed to minimize your exposure to sensitive data, thereby reducing your compliance burden. * **Data Masking**: For consumer protection and compliance, full card numbers must not be displayed on receipts or any customer-facing materials. Our API automatically masks PANs, displaying only the last four digits to facilitate safe receipt generation. * **Network Scans**: If your application is web-based, regular scans of your hosting environment are mandatory to identify and rectify potential vulnerabilities. This proactive measure is crucial for maintaining a secure and compliant online presence. * **PCI Compliance**: Adherence to PCI DSS standards is not optional; it's a requirement for operating securely and legally in the payments ecosystem. For detailed information on compliance requirements and resources, please visit the PCI Security Standards Council website [https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/). * **Request Validation**: Our API includes mechanisms to verify the legitimacy of each request, ensuring it pertains to a valid account and originates from a trusted source. We leverage remote IP address verification alongside sophisticated application firewall technologies to thwart a wide array of common security threats.  ## Getting Started Before integrating with the CityPay API, ensure your application and development practices align with the outlined compliance and security measures. This preparatory step is crucial for a smooth integration process and the long-term success of your payment processing operations.  For further details on API endpoints, request/response formats, and code examples, proceed to the subsequent sections of our documentation. Our aim is to provide you with all the necessary tools and information to integrate our payment processing capabilities seamlessly into your application.  Thank you for choosing CityPay API. We look forward to supporting your payment processing needs with our secure, compliant, and versatile API solution.

API version: 6.6.40
Contact: support@citypay.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citypay

import (
	"encoding/json"
)

// checks if the PaylinkFieldGuardModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaylinkFieldGuardModel{}

// PaylinkFieldGuardModel struct for PaylinkFieldGuardModel
type PaylinkFieldGuardModel struct {
	// A type of HTML element that should be displayed such as text, password, url. Any HTML5 input type value may be supplied.  If a value of `date` is supplied the value format should be an ISO format YYYY-MM-DD format date i.e. 2024-03-01 If a value of `datetime-local` is supplied, the value format should be an ISO format YYYY-MM-DDTHH:mm i.e. 2024-06-01T19:30.
	FieldType *string `json:"field_type,omitempty"`
	// A label for the field guard to display on the authentication page.
	Label *string `json:"label,omitempty"`
	// A maximum length of any value supplied in the field guard form. Used for validating entry.
	Maxlen *int32 `json:"maxlen,omitempty"`
	// A minimum length of any value supplied in the field guard form. Used for validating entry.
	Minlen *int32 `json:"minlen,omitempty"`
	// A field name which is used to refer to a field which is guarded.
	Name *string `json:"name,omitempty"`
	// A JavaScript regular expression value which can be used to validate the data provided in the field guard entry form. Used for validating entry.
	Regex *string `json:"regex,omitempty"`
	// A value directly associated with the field guard. Any value provided at this level will be considered as sensitive and not logged.
	Value *string `json:"value,omitempty"`
}

// NewPaylinkFieldGuardModel instantiates a new PaylinkFieldGuardModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaylinkFieldGuardModel() *PaylinkFieldGuardModel {
	this := PaylinkFieldGuardModel{}
	return &this
}

// NewPaylinkFieldGuardModelWithDefaults instantiates a new PaylinkFieldGuardModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaylinkFieldGuardModelWithDefaults() *PaylinkFieldGuardModel {
	this := PaylinkFieldGuardModel{}
	return &this
}

// GetFieldType returns the FieldType field value if set, zero value otherwise.
func (o *PaylinkFieldGuardModel) GetFieldType() string {
	if o == nil || IsNil(o.FieldType) {
		var ret string
		return ret
	}
	return *o.FieldType
}

// GetFieldTypeOk returns a tuple with the FieldType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaylinkFieldGuardModel) GetFieldTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FieldType) {
		return nil, false
	}
	return o.FieldType, true
}

// HasFieldType returns a boolean if a field has been set.
func (o *PaylinkFieldGuardModel) HasFieldType() bool {
	if o != nil && !IsNil(o.FieldType) {
		return true
	}

	return false
}

// SetFieldType gets a reference to the given string and assigns it to the FieldType field.
func (o *PaylinkFieldGuardModel) SetFieldType(v string) {
	o.FieldType = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *PaylinkFieldGuardModel) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaylinkFieldGuardModel) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *PaylinkFieldGuardModel) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *PaylinkFieldGuardModel) SetLabel(v string) {
	o.Label = &v
}

// GetMaxlen returns the Maxlen field value if set, zero value otherwise.
func (o *PaylinkFieldGuardModel) GetMaxlen() int32 {
	if o == nil || IsNil(o.Maxlen) {
		var ret int32
		return ret
	}
	return *o.Maxlen
}

// GetMaxlenOk returns a tuple with the Maxlen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaylinkFieldGuardModel) GetMaxlenOk() (*int32, bool) {
	if o == nil || IsNil(o.Maxlen) {
		return nil, false
	}
	return o.Maxlen, true
}

// HasMaxlen returns a boolean if a field has been set.
func (o *PaylinkFieldGuardModel) HasMaxlen() bool {
	if o != nil && !IsNil(o.Maxlen) {
		return true
	}

	return false
}

// SetMaxlen gets a reference to the given int32 and assigns it to the Maxlen field.
func (o *PaylinkFieldGuardModel) SetMaxlen(v int32) {
	o.Maxlen = &v
}

// GetMinlen returns the Minlen field value if set, zero value otherwise.
func (o *PaylinkFieldGuardModel) GetMinlen() int32 {
	if o == nil || IsNil(o.Minlen) {
		var ret int32
		return ret
	}
	return *o.Minlen
}

// GetMinlenOk returns a tuple with the Minlen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaylinkFieldGuardModel) GetMinlenOk() (*int32, bool) {
	if o == nil || IsNil(o.Minlen) {
		return nil, false
	}
	return o.Minlen, true
}

// HasMinlen returns a boolean if a field has been set.
func (o *PaylinkFieldGuardModel) HasMinlen() bool {
	if o != nil && !IsNil(o.Minlen) {
		return true
	}

	return false
}

// SetMinlen gets a reference to the given int32 and assigns it to the Minlen field.
func (o *PaylinkFieldGuardModel) SetMinlen(v int32) {
	o.Minlen = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PaylinkFieldGuardModel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaylinkFieldGuardModel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PaylinkFieldGuardModel) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PaylinkFieldGuardModel) SetName(v string) {
	o.Name = &v
}

// GetRegex returns the Regex field value if set, zero value otherwise.
func (o *PaylinkFieldGuardModel) GetRegex() string {
	if o == nil || IsNil(o.Regex) {
		var ret string
		return ret
	}
	return *o.Regex
}

// GetRegexOk returns a tuple with the Regex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaylinkFieldGuardModel) GetRegexOk() (*string, bool) {
	if o == nil || IsNil(o.Regex) {
		return nil, false
	}
	return o.Regex, true
}

// HasRegex returns a boolean if a field has been set.
func (o *PaylinkFieldGuardModel) HasRegex() bool {
	if o != nil && !IsNil(o.Regex) {
		return true
	}

	return false
}

// SetRegex gets a reference to the given string and assigns it to the Regex field.
func (o *PaylinkFieldGuardModel) SetRegex(v string) {
	o.Regex = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *PaylinkFieldGuardModel) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaylinkFieldGuardModel) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *PaylinkFieldGuardModel) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *PaylinkFieldGuardModel) SetValue(v string) {
	o.Value = &v
}

func (o PaylinkFieldGuardModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaylinkFieldGuardModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FieldType) {
		toSerialize["field_type"] = o.FieldType
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Maxlen) {
		toSerialize["maxlen"] = o.Maxlen
	}
	if !IsNil(o.Minlen) {
		toSerialize["minlen"] = o.Minlen
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Regex) {
		toSerialize["regex"] = o.Regex
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullablePaylinkFieldGuardModel struct {
	value *PaylinkFieldGuardModel
	isSet bool
}

func (v NullablePaylinkFieldGuardModel) Get() *PaylinkFieldGuardModel {
	return v.value
}

func (v *NullablePaylinkFieldGuardModel) Set(val *PaylinkFieldGuardModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePaylinkFieldGuardModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePaylinkFieldGuardModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaylinkFieldGuardModel(val *PaylinkFieldGuardModel) *NullablePaylinkFieldGuardModel {
	return &NullablePaylinkFieldGuardModel{value: val, isSet: true}
}

func (v NullablePaylinkFieldGuardModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaylinkFieldGuardModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
